[{"path":"https://txwri.github.io/adc/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 adc authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://txwri.github.io/adc/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Michael Schramm. Author, maintainer.","code":""},{"path":"https://txwri.github.io/adc/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Schramm M (2022). adc: Calculate Antecedant Discharge Conditions. R package version 0.0.9000.","code":"@Manual{,   title = {adc: Calculate Antecedant Discharge Conditions},   author = {Michael Schramm},   year = {2022},   note = {R package version 0.0.9000}, }"},{"path":"https://txwri.github.io/adc/index.html","id":"adc","dir":"","previous_headings":"","what":"Calculate Antecedant Discharge Conditions","title":"Calculate Antecedant Discharge Conditions","text":"adc provides functions calculate discharge-based covariates useful rating curve regression.","code":""},{"path":"https://txwri.github.io/adc/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Calculate Antecedant Discharge Conditions","text":"adc CRAN. Pre-built binaries can installed r-universe:","code":"install.packages('adc', repos = c(txwri = 'https://txwri.r-universe.dev'))"},{"path":"https://txwri.github.io/adc/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Calculate Antecedant Discharge Conditions","text":"Flow anomalies represent different current discharge period (current day, current week, current month, etc.) previous periods (previous week, previous month, period record, etc.).  packages also includes functions calculate exponentially weighted discounted flow, base-flow, rate change mean daily streamflow. Functions generally work well using dplyr::mutate() function facilitate tidy workflows.","code":"library(adc) ## example code is lavaca and includes dates and mean daily flow  data(lavaca)  x <- fa(lavaca$Flow,         dates = lavaca$Date,         T_1 = \"1 month\",         T_2 = \"1 year\",         clean_up = TRUE,         transform = \"log10\")  plot(lavaca$Date, x, type = \"l\", xlab = \"Date\", ylab = \"Anomaly [unitless]\")"},{"path":"https://txwri.github.io/adc/reference/bf_sep_lh.html","id":null,"dir":"Reference","previous_headings":"","what":"Baseflow Seperation — bf_sep_lh","title":"Baseflow Seperation — bf_sep_lh","text":"Implements Lyne Hollick filter baseflow seperation. function utilizes approach Ladson et al. (2013).","code":""},{"path":"https://txwri.github.io/adc/reference/bf_sep_lh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Baseflow Seperation — bf_sep_lh","text":"","code":"bf_sep_lh(discharge, a = 0.98, n = 3, reflect = 30)"},{"path":"https://txwri.github.io/adc/reference/bf_sep_lh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Baseflow Seperation — bf_sep_lh","text":"discharge numeric vector daily discharge values alpha, numeric values [0-1]. n number passes filter. Must numeric value, defaults 3. reflect number values reflect start end discharge reduce \"warm-\" \"cool-\" issues recursive filter. Must less equal length discharge. long discharge records value matter much, short records reflection approach length discharge. default 30 implemented Ladson et al. (2013).","code":""},{"path":"https://txwri.github.io/adc/reference/bf_sep_lh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Baseflow Seperation — bf_sep_lh","text":"vector numeric values representing estimated baseflow.","code":""},{"path":"https://txwri.github.io/adc/reference/bf_sep_lh.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Baseflow Seperation — bf_sep_lh","text":"function implements Lyne-Hollick filter (Lyne Hollick,   1979) using approach detailed Ladson et al. (2013). filter :    Yk=α×Yk−1+1+α2×(Qk−Qk−1)Y_{k} = \\alpha \\times Y_{k-1} + \\frac{1+\\alpha}{2} \\times (Q_k - Q_{k-1})Yk​=α×Yk−1​+21+α​×(Qk​−Qk−1​)   ,  YkY_kYk​   filtered quick response    kthk^{th}kth   sample.  QkQ_{k}Qk​   original streamflow  α\\alphaα   filter parameter [0-1]. Ladson et al. (2013) suggest standardized approach applying   filter : (1) reflecting streamflow start end series   address warm-cool-; (2) specify initial value pass   measured flow; (3) using three passes filter (forward,   backward, forward); Ladson et al. (2013) also provide additional   suggestions handling missing values appropriate alpha parameter   values covered .","code":""},{"path":"https://txwri.github.io/adc/reference/bf_sep_lh.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Baseflow Seperation — bf_sep_lh","text":"function based heavily baseflows function hydrostats   package Nick Bond. However, baseflow function returns additional   summary measures utilizes different starting values. Filter outputs   vary slightly.","code":""},{"path":"https://txwri.github.io/adc/reference/bf_sep_lh.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Baseflow Seperation — bf_sep_lh","text":"Lyne, V., & Hollick, M. (1979, September). Stochastic time-variable   rainfall-runoff modelling. Institute Engineers Australia National   Conference (Vol. 79, . 10, pp. 89-93). Barton, Australia: Institute   Engineers Australia. Ladson, . R., Brown, R., Neal, B., & Nathan, R. (2013). standard   approach baseflow separation using Lyne Hollick filter.   Australian Journal Water Resources, 17(1), 25-34, https://dx.doi.org/10.7158/W12-028.2013.17.1.","code":""},{"path":"https://txwri.github.io/adc/reference/bf_sep_lh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Baseflow Seperation — bf_sep_lh","text":"","code":"# Standard use case bf <- bf_sep_lh(lavaca$Flow, a = 0.975) head(bf) # will work in tidy workflows using dplyr if installed if (FALSE) { lavaca |> mutate(ma = bf_sep_lh(Flow, a = 0.975)) }"},{"path":"https://txwri.github.io/adc/reference/clean_flows.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean Flow Record — clean_flows","title":"Clean Flow Record — clean_flows","text":"Function replace zeros flow record specified value replace negative discharge values NA.","code":""},{"path":"https://txwri.github.io/adc/reference/clean_flows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean Flow Record — clean_flows","text":"","code":"clean_flows(discharge, replace_0 = 0.001, replace_neg = NA)"},{"path":"https://txwri.github.io/adc/reference/clean_flows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean Flow Record — clean_flows","text":"discharge numeric vector discharges. replace_0 numeric value NA replace zeros . Defaults 0.001. replace_neg numeric value NA replace negative values . Defaults NA.","code":""},{"path":"https://txwri.github.io/adc/reference/clean_flows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean Flow Record — clean_flows","text":"numerioc vector length values provided discharge.","code":""},{"path":"https://txwri.github.io/adc/reference/fa.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Flow Anomalies — fa","title":"Calculate Flow Anomalies — fa","text":"Flow anomalies dimensionless term reflects difference current discharges compared past discharges. positive flow anomaly indicates current time period  T1T_1T1​ wetter precedent time period  T2T_2T2​.","code":""},{"path":"https://txwri.github.io/adc/reference/fa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Flow Anomalies — fa","text":"","code":"fa(discharge, dates, T_1, T_2, clean_up = FALSE, transform = \"log10\")"},{"path":"https://txwri.github.io/adc/reference/fa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Flow Anomalies — fa","text":"discharge numeric vector daily discharges dates vector dates coresponding daily discharge measurements. Must class \"Date\". T_1 size period  T1T_1T1​ preceding given day t. Specified way argument seq.POSIXt. T_2 size period  T2T_2T2​ preceding given day t. Specified way argument seq.POSIXt. Period T_2 expected longer T_1. clean_up logical. runs .... prior .... transform NA, log, log10,","code":""},{"path":"https://txwri.github.io/adc/reference/fa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Flow Anomalies — fa","text":"vector numeric values corresponding  XT1(t)−XT2(t)X_{T_1}(t) - X_{T_2}(t)XT1​​(t)−XT2​​(t).","code":""},{"path":"https://txwri.github.io/adc/reference/fa.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Flow Anomalies — fa","text":"FA term describes different antecedant discharge   conditions selected temporal period compared selected period   day analysis. Ryberg Vecchia (2014) Vechia et al. (2009)   describe flow anomaly (FA) term :    FA(t)=XT1(t)−XT2(t)FA(t)=X_{T_1}(t) - X_{T_2}(t)FA(t)=XT1​​(t)−XT2​​(t) T_1 T_2 arguments can specified character strings  containing one \"sec\", \"min\", \"hour\", \"day\",  \"DSTday\", \"week\", \"month\", \"quarter\",  \"year\". generally preceded integer space. Can also  followed \"s\". Additionally, T_2 accepts  \"period\" coresponds mean entire flow record.","code":""},{"path":"https://txwri.github.io/adc/reference/fa.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate Flow Anomalies — fa","text":"Ryberg, Karen R., Aldo V. Vecchia. 2012. “WaterData—R Package  Retrieval, Analysis, Anomaly Calculation Daily Hydrologic Time Series  Data.” Open Filer Report 2012-1168. National Water-Quality Assessment  Program. Reston, VA: USGS. https://pubs.usgs.gov//2012/1168/. Vecchia, Aldo V., Robert J. Gilliom, Daniel J. Sullivan, David L. Lorenz,  Jeffrey D. Martin. 2009. “Trends Concentrations Use  Agricultural Herbicides Corn Belt Rivers, 1996-2006.” Environmental  Science & Technology 43 (24): 9096–9102.  https://doi.org/10.1021/es902122j.","code":""},{"path":"https://txwri.github.io/adc/reference/fa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Flow Anomalies — fa","text":"","code":"## examples from Ryberg & Vechia 2012  ## Long-term Flow Anomaly LTFA  LTFA <- fa(lavaca$Flow,             dates = lavaca$Date,             T_1 = \"1 year\",             T_2 = \"period\",             clean_up = TRUE,             transform = \"log10\")   ## Mid-term Flow Anomaly MTFA  MTFA <- fa(lavaca$Flow,             dates = lavaca$Date,             T_1 = \"1 month\",             T_2 = \"1 year\",             clean_up = TRUE,             transform = \"log10\")   ## Short-term Flow Anomaly STFA  STFA <- fa(lavaca$Flow,             dates = lavaca$Date,             T_1 = \"1 day\",             T_2 = \"1 month\",             clean_up = TRUE,             transform = \"log10\")"},{"path":"https://txwri.github.io/adc/reference/lavaca.html","id":null,"dir":"Reference","previous_headings":"","what":"Daily streamflows from USGS gage at Lavaca River — lavaca","title":"Daily streamflows from USGS gage at Lavaca River — lavaca","text":"dataset containing dates mean daily streamflows USGS gage 08164000, Lavaca River Texas.","code":""},{"path":"https://txwri.github.io/adc/reference/lavaca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Daily streamflows from USGS gage at Lavaca River — lavaca","text":"","code":"lavaca"},{"path":"https://txwri.github.io/adc/reference/lavaca.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Daily streamflows from USGS gage at Lavaca River — lavaca","text":"data frame 9132 rows 5 variables: agency_cd agency code, character site_no site number, character Date date, Date format Flow mean daily stream flow, numeric Flow_cd tag indicate data quality, character","code":""},{"path":"https://txwri.github.io/adc/reference/lavaca.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Daily streamflows from USGS gage at Lavaca River — lavaca","text":"https://waterdata.usgs.gov/nwis/dv/?site_no=08164000&agency_cd=USGS","code":""},{"path":"https://txwri.github.io/adc/reference/lyne_hollick.html","id":null,"dir":"Reference","previous_headings":"","what":"Lyne and Hollick Equation — lyne_hollick","title":"Lyne and Hollick Equation — lyne_hollick","text":"Filter equation.","code":""},{"path":"https://txwri.github.io/adc/reference/lyne_hollick.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lyne and Hollick Equation — lyne_hollick","text":"","code":"lyne_hollick(Q, a)"},{"path":"https://txwri.github.io/adc/reference/lyne_hollick.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lyne and Hollick Equation — lyne_hollick","text":"Q numeric vector discharge values alpha value [0-1]","code":""},{"path":"https://txwri.github.io/adc/reference/lyne_hollick.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lyne and Hollick Equation — lyne_hollick","text":"vector estimated baseflow values","code":""},{"path":"https://txwri.github.io/adc/reference/rate_of_change.html","id":null,"dir":"Reference","previous_headings":"","what":"Approximate the Instantaneous Rate of Change — rate_of_change","title":"Approximate the Instantaneous Rate of Change — rate_of_change","text":"Estimate rate change first derivative raw mean daily streamflow smoothed cubic spline fit time mean daily streamflow.","code":""},{"path":"https://txwri.github.io/adc/reference/rate_of_change.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Approximate the Instantaneous Rate of Change — rate_of_change","text":"","code":"rate_of_change(discharge, dates, smooth = TRUE)"},{"path":"https://txwri.github.io/adc/reference/rate_of_change.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Approximate the Instantaneous Rate of Change — rate_of_change","text":"discharge numeric vector mean daily discharges dates vector dates corresponding daily discharge measurements. Must class \"Date\". smooth logical indicating first derivative calculated using cubic smoothing spline function. Defaults TRUE.","code":""},{"path":"https://txwri.github.io/adc/reference/rate_of_change.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Approximate the Instantaneous Rate of Change — rate_of_change","text":"Numeric vector estimated streamflow rate change.","code":""},{"path":"https://txwri.github.io/adc/reference/rate_of_change.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Approximate the Instantaneous Rate of Change — rate_of_change","text":"","code":"## calculate the first deriv of the smoothed function between Date and streamflow rate <- rate_of_change(lavaca$Flow, lavaca$Date) head(rate)  ## Return the first deriv on raw measurements rate2 <- rate_of_change(lavaca$Flow, lavaca$Date, smooth = FALSE) head(rate2)  ## Use in dplyr if (FALSE) { lavaca |>     mutate(f_q1 = rate_of_change(Flow, Date),            dQdT = rate_of_change(Flow, Date, smooth = FALSE)) }"},{"path":"https://txwri.github.io/adc/reference/run_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Iterate Lyne-Hollick Filter — run_filter","title":"Iterate Lyne-Hollick Filter — run_filter","text":"Simply iterates n runs Lyne-Hollick filter.","code":""},{"path":"https://txwri.github.io/adc/reference/run_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Iterate Lyne-Hollick Filter — run_filter","text":"","code":"run_filter(Q, a, n)"},{"path":"https://txwri.github.io/adc/reference/run_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Iterate Lyne-Hollick Filter — run_filter","text":"Q vector discharge values alpha parameter n number times itterate filter.","code":""},{"path":"https://txwri.github.io/adc/reference/run_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Iterate Lyne-Hollick Filter — run_filter","text":"numeric vector","code":""},{"path":"https://txwri.github.io/adc/reference/sdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Smooth Discounted Flow — sdf","title":"Smooth Discounted Flow — sdf","text":"Applies exponential smoothing discharge data.","code":""},{"path":"https://txwri.github.io/adc/reference/sdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Smooth Discounted Flow — sdf","text":"","code":"sdf(discharge, delta = 0.95)"},{"path":"https://txwri.github.io/adc/reference/sdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Smooth Discounted Flow — sdf","text":"discharge vector discharge data (numeric). delta discount factor can value (0,1), defaults 0.95. delta approaches one, average discounted flow approaches mean flow. Small values delta return values closer current daily flow.","code":""},{"path":"https://txwri.github.io/adc/reference/sdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Smooth Discounted Flow — sdf","text":"vector values length discharge.","code":""},{"path":"https://txwri.github.io/adc/reference/sdf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Smooth Discounted Flow — sdf","text":"smooth discounted flow (SDF) proposed Kuhnert et al.   (2012). premise SDF incorporate influence historical   flows flux:    SDF(δ)=dκi−1+(1−δ)q^−1SDF(\\delta) = d\\kappa_{-1} + (1-\\delta)\\hat{q}_{-1}SDF(δ)=dκi−1​+(1−δ)q^​−1​   ,    κi=∑m=1iq^m\\kappa_{}=\\sum_{m=1}^{}\\hat{q}_mκi​=m=1∑​q^​m​   discount factor  δ\\deltaδ,  κi\\kappa_{}κi​   represents cumulative flow    iiith day.","code":""},{"path":"https://txwri.github.io/adc/reference/sdf.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Smooth Discounted Flow — sdf","text":"Kuhnert, Petra M., Brent L. Henderson, Stephen E. Lewis, Zoe T.   Bainbridge, Scott N. Wilkinson, Jon E. Brodie. 2012. “Quantifying Total   Suspended Sediment Export Burdekin River Catchment Using Loads   Regression Estimator Tool”   Water Resources Research 48 (4). https://doi.org/10.1029/2011WR011080.","code":""},{"path":"https://txwri.github.io/adc/reference/sdf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Smooth Discounted Flow — sdf","text":"","code":"# Standard use case ma <- sdf(lavaca$Flow, delta=0.95) head(ma)  # will work in tidy workflows using dplyr if installed if (FALSE) { lavaca |> mutate(ma = sdf(Flow, delta = 0.5)) }"}]
